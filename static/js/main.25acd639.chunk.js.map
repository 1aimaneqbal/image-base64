{"version":3,"sources":["components/ImageComponent.js","components/TextareaComponent.js","App.js","index.js"],"names":["ImageComponent","image64","setImage64","inputRef","useRef","useState","imageName","setImageName","clickInput","e","preventDefault","current","click","encodeFileBase64","file","reader","FileReader","readAsDataURL","onload","Base64","result","console","log","onerror","error","className","onClick","src","alt","type","onChange","target","files","name","accept","hidden","ref","TextareaComponent","textareaRef","text","setText","value","placeholder","substr","alert","navigator","clipboard","writeText","App","showTab","setShowTab","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA8DeA,EA3DQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACzBC,EAAWC,iBAAO,MACxB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAKMC,EAAa,SAAAC,GACfA,EAAEC,iBACFP,EAASQ,QAAQC,SAMfC,EAAmB,SAACC,GACtB,IAAIC,EAAS,IAAIC,WACbF,IACAC,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,WACZ,IAAIC,EAASJ,EAAOK,OACpBC,QAAQC,IAAIH,GACZjB,EAAWiB,IAEfJ,EAAOQ,QAAU,SAACC,GACdH,QAAQC,IAAI,UAAWE,MAKnC,OACI,sBAAKC,UAAU,iBAAf,UACI,sBAAKA,UAAU,eAAeC,QAASzB,EAH7B,aAGmDO,EAA7D,UAEQP,EACI,qBAAK0B,IAAK1B,EAAS2B,IAAI,KAEvB,sBAAKH,UAAU,aAAf,UACI,cAAC,IAAD,IADJ,uBAMJxB,GACI,qCACI,qBAAKwB,UAAU,WAAf,SAA2BnB,IAC3B,wBAAQoB,QAnCJ,SAAAjB,GACxBA,EAAEC,iBACFR,EAAW,KAiCS,SAAsC,cAAC,IAAD,YAKtD,sBAAKuB,UAAU,gBAAf,UACI,uBAAOI,KAAK,OAAOC,SAjDJ,SAACrB,GACxBF,EAAaE,EAAEsB,OAAOC,MAAM,GAAGC,MAC/BpB,EAAiBJ,EAAEsB,OAAOC,MAAM,KA+CyBE,OAAO,UAAUC,QAAM,EAACC,IAAKjC,IAC9E,wBAAQuB,QAASlB,EAAjB,oC,gBCbD6B,EAxCW,SAAC,GAA6B,IAA3BpC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5BoC,EAAclC,iBAAO,QAC3B,EAAwBC,mBAAS,IAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KAyBA,OACI,sBAAKf,UAAU,oBAAf,UACI,0BAAUK,SA1BM,SAAArB,GACpB+B,EAAQ/B,EAAEsB,OAAOU,QAyBwBA,MAAOF,GAActC,EAASmC,IAAKE,EAAaI,YAAY,kHACjG,sBAAKjB,UAAU,eAAf,UACI,wBAAQC,QAbU,SAAAjB,GAC1BA,EAAEC,iBACyB,eAAvB6B,EAAKI,OAAO,EAAG,IACfzC,EAAWqC,GAGXK,MAAM,0BAOF,4BACA,yBAAQlB,QA1BE,SAAAjB,GAClBA,EAAEC,iBACET,IACA4C,UAAUC,UAAUC,UAAU9C,GAC9B2C,MAAM,yBAsBF,UAAgC,cAAC,IAAD,IAAW,4CAC3C,yBAAQlB,QApBC,SAAAjB,GACjBA,EAAEC,iBACF8B,EAAQ,IACRtC,EAAW,KAiBH,UAA+B,cAAC,IAAD,IAAc,gDAEjD,2F,QCGG8C,G,MAnCH,WACR,MAA8B3C,oBAAS,GAAvC,mBAAO4C,EAAP,KAAgBC,EAAhB,KACA,EAA8B7C,mBAAS,IAAvC,mBAAOJ,EAAP,KAAgBC,EAAhB,KAOA,OACI,qCACI,gCACI,uCACA,cAAC,IAAD,IACA,2CAEJ,sBAAKuB,UAAU,WAAf,UACI,qBAAKA,UAAS,mBAAcwB,EAAQ,aAAa,IAAMvB,QAdzC,WACtBwB,GAAW,IAaH,mBACA,qBAAKzB,UAAS,mBAAcwB,EAAQ,GAAG,cAAgBvB,QAZxC,WACvBwB,GAAW,IAWH,qBAEJ,qBAAKzB,UAAU,YAAf,SACI,+BAEQwB,EACI,cAAC,EAAD,CAAgBhD,QAASA,EAASC,WAAYA,IAE9C,cAAC,EAAD,CAAmBD,QAASA,EAASC,WAAYA,aC5B7EiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.25acd639.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport { UilTimes, UilCloudUpload } from '@iconscout/react-unicons'\r\n\r\nconst ImageComponent = ({ image64, setImage64 }) => {\r\n    const inputRef = useRef(null)\r\n    const [imageName, setImageName] = useState('')\r\n    const imageSelectHandler = (e) => {\r\n        setImageName(e.target.files[0].name)\r\n        encodeFileBase64(e.target.files[0])\r\n    }\r\n    const clickInput = e => {\r\n        e.preventDefault()\r\n        inputRef.current.click()\r\n    }\r\n    const cancelSelectedImage = e => {\r\n        e.preventDefault()\r\n        setImage64(\"\")\r\n    }\r\n    const encodeFileBase64 = (file) => {\r\n        var reader = new FileReader();\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                var Base64 = reader.result;\r\n                console.log(Base64);\r\n                setImage64(Base64);\r\n            };\r\n            reader.onerror = (error) => {\r\n                console.log(\"error: \", error);\r\n            };\r\n        }\r\n    };\r\n    const doNothing = () => { }\r\n    return (\r\n        <div className=\"imageContainer\">\r\n            <div className=\"imageDisplay\" onClick={image64 ? doNothing : clickInput}>\r\n                {\r\n                    image64 ? (\r\n                        <img src={image64} alt=\"\" />\r\n                    ) : (\r\n                        <div className=\"noImageDiv\">\r\n                            <UilCloudUpload />\r\n                            No file Selected.\r\n                        </div>\r\n                    )\r\n                }{\r\n                    image64 && (\r\n                        <>\r\n                            <div className=\"fileName\">{imageName}</div>\r\n                            <button onClick={cancelSelectedImage}><UilTimes /></button>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"imageUploader\">\r\n                <input type=\"file\" onChange={imageSelectHandler} accept=\"image/*\" hidden ref={inputRef} />\r\n                <button onClick={clickInput}>Select an Image</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageComponent\r\n","import React, { useState, useRef } from 'react'\r\nimport { UilHistory, UilCopy } from '@iconscout/react-unicons'\r\n\r\nconst TextareaComponent = ({ image64, setImage64 }) => {\r\n    const textareaRef = useRef('null')\r\n    const [text, setText] = useState('')\r\n    const textAreaHandler = e => {\r\n        setText(e.target.value)\r\n    }\r\n    const copy64Handler = e => {\r\n        e.preventDefault()\r\n        if (image64) {\r\n            navigator.clipboard.writeText(image64)\r\n            alert(\"Copied to clipboard\")\r\n        }\r\n    }\r\n    const resetHandler = e => {\r\n        e.preventDefault()\r\n        setText('')\r\n        setImage64('')\r\n    }\r\n    const imageGeneratorHandler = e => {\r\n        e.preventDefault()\r\n        if (text.substr(0, 10) === \"data:image\") {\r\n            setImage64(text)\r\n        }\r\n        else {\r\n            alert(\"Invalid Base64 format\")\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"textareaContainer\">\r\n            <textarea onChange={textAreaHandler} value={text ? text : image64} ref={textareaRef} placeholder=\"Upload an image to automatically generate its Base64 value or paste a Base64 value here to generate an image.\"></textarea>\r\n            <div className=\"textareabtns\">\r\n                <button onClick={imageGeneratorHandler}>Generate Image</button>\r\n                <button onClick={copy64Handler}><UilCopy /><span> Copy</span></button>\r\n                <button onClick={resetHandler}><UilHistory /><span> Reset</span></button>\r\n            </div>\r\n            <h6>Copy Functionality might not work on mobile browsers.</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextareaComponent\r\n","import React, {useState} from 'react'\r\nimport ImageComponent from './components/ImageComponent'\r\nimport TextareaComponent from './components/TextareaComponent'\r\nimport { UilExchangeAlt } from '@iconscout/react-unicons'\r\nimport './styles/main.css'\r\n\r\nconst App = () => {\r\n    const [showTab, setShowTab] = useState(true)\r\n    const [image64, setImage64] = useState('')\r\n    const showImgCompHandler= () =>{\r\n        setShowTab(true)\r\n    }\r\n    const showTextCompHandler= () =>{\r\n        setShowTab(false)\r\n    }\r\n    return (\r\n        <>\r\n            <nav>\r\n                <h2>Image</h2>\r\n                <UilExchangeAlt />\r\n                <h2>Base64</h2>\r\n            </nav>\r\n            <div className=\"switcher\">\r\n                <div className={`showComp ${showTab?'activeComp':''}`} onClick={showImgCompHandler}>Image</div>\r\n                <div className={`showComp ${showTab?'':'activeComp'}`} onClick={showTextCompHandler}>Code</div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <form>\r\n                    {\r\n                        showTab ? (\r\n                            <ImageComponent image64={image64} setImage64={setImage64}/>\r\n                        ):(\r\n                            <TextareaComponent image64={image64} setImage64={setImage64} />\r\n                        )\r\n                    }\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}